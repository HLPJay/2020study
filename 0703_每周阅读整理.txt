1：读取配置文件的代码
2：写入配置文件的代码
3：单线程epoll
   多线程epoll
   多进程epoll
4：堆实现时间片轮询
5：内网穿透
6：线程池  1任务队列对1线程
		   1任务队列对多线程
		   多任务队列对多线程  ==》空转while循环不会导致cpu跑满，跑满不一定卡
7：并发量？百万并发限制有哪些？
8：加锁队列   无锁队列  自旋锁队列
9: 实现哈希树，散列表
10：http，mq，
11: 回调机制（同步，异步）
13：ZooKeeper ？和redis分布式锁的区别
14：实现一个网络版的棋牌游戏
15：微信已收藏：  内存地址：分段机制  分页机制
				  内核态地址空间/进程内存空间
			内存管理：
				  内存碎片，伙伴系统算法，slab算法，
				  内核态内存池，用户态内存池
				  DMA内存（直接内存访问，发信号）
			内存使用场景：
				page 管理
				slab（kmalloc、内存池）
				用户态内存使用（malloc、relloc 文件映射、共享内存）
				程序的内存 map（栈、堆、code、data）
				内核和用户态的数据传递（copy_from_user、copy_to_user）
				内存映射（硬件寄存器、保留内存）
				DMA 内存
			缺页异常？ ==》伙伴关系维护
			用户进程访问内存。
			共享内存
			内存问题：内存泄漏，c野指针
			 内存泄露：
				在类的构造函数和析构函数中没有匹配地调用 new 和 delete 函数
				没有正确地清除嵌套的对象指针
				没有将基类的析构函数定义为虚函数
				当基类的指针指向子类对象时，如果基类的析构函数不是 virtual，那么子类的析构函数将不会被调用，子类的资源没有得到正确释放，因此造成内存泄露
				缺少拷贝构造函数，按值传递会调用（拷贝）构造函数，引用传递不会调用
				指向对象的指针数组不等同于对象数组，数组中存放的是指向对象的指针，不仅要释放每个对象的空间，还要释放每个指针的空间
				缺少重载赋值运算符，也是逐个成员拷贝的方式复制对象，如果这个类的大小是可变的，那么结果就是造成内存泄露
			 C 野指针
				指针变量没有初始化
				指针被 free 或 delete 后，没有设置为 NULL
				指针操作超越了变量的作用范围，比如返回指向栈内存的指针就是野指针
				访问空指针（需要做空判断）
				sizeof 无法获取数组的大小
				试图修改常量，如：char p='1234';p=\'1\';
			 C 资源访问冲突
				多线程共享变量没有用 valotile 修饰
				多线程访问全局变量未加锁
				全局变量仅对单进程有效
				多进程写共享内存数据，未做同步处理
				mmap 内存映射，多进程不安全
			 STL 迭代器失效
				被删除的迭代器失效
				添加元素（insert/push_back 等）、删除元素导致顺序容器迭代器失效
			 C++ 11 智能指针
				auto_ptr 替换为 unique_ptr
				使用 make_shared 初始化一个 shared_ptr
				weak_ptr 智能指针助手（1）原理分析
			 C++ 11 更小更快更安全
				std::atomic 原子数据类型 多线程安全
				std::array 定长数组开销比 array 小和
					std::vector 不同的是 array 的长度是固定的，不能动态拓展
				std::vector vector 瘦身 shrink_to_fit()：
					将 capacity 减少为于 size() 相同的大小
				td::forward_list
				forward_list 是单链表（std::list 是双链表），只需要顺序遍历的场合，forward_list 能更加节省内存，插入和删除的性能高于 list
				std::unordered_map、std::unordered_set
					用 hash 实现的无序的容器，插入、删除和查找的时间复杂度都是 O(1)，
					在不关注容器内元素顺序的场合，使用 unordered 的容器能获得更高的性能
			查看内存相关命令:	
				系统中内存使用情况：/proc/meminfo  
				进程的内存使用情况：/proc/28040/status
				查询内存总使用率：free
				查询进程 cpu 和内存使用占比：top
				虚拟内存统计：vmstat
				进程消耗内存占比和排序：ps aux –sort -rss
				释放系统内存缓存： /proc/sys/vm/drop_caches
16:并发相关的问题：
				synchronized volatile的CPU原语是如何实现的？
				无锁、偏向锁、轻量级锁、重量级锁有什么差别？
				线程间通信，同机器进程间通信，跨机器进程间通信，各有什么方法？
				线程和纤程的区别的是什么？为什么纤程比较轻量级？
				ThreadLocal有没有内存泄漏的问题？为什么？
				下列三种业务，应该如何使用线程池：
					高并发、任务执行时间短
					并发不高、任务执行时间长
					并发高、业务执行时间长
17：微信已收藏，网络相关知识点
18：缓存，如何使用缓存
19：redis+服务器密码生成二维码，实现登录


1：料盘的个数
2：每个料盘对应的机床以及料盘上的个数
3：配置文件的设置
 料盘的个数， 料盘上最多放料的个数，  每个料盘对应的料的个数
 
 
 
 PlateNum = 8
 MaxNum = 1
 Data = {[1,1,1],[2,2,0],[3,3,1],[4,4,0],[1,5,0]} 
 
 MachineId = {1,2,3,4,1}
 plateId = {1,2,3,4,5}
 EveryPlateNum = {1,0,1,0,0}
